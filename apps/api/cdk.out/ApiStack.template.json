{
 "Resources": {
  "cpbattlegameapiF20B11A1": {
   "Type": "AWS::AppSync::GraphQLApi",
   "Properties": {
    "AuthenticationType": "API_KEY",
    "Name": "cpbattlegame-api",
    "XrayEnabled": true
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/Resource"
   }
  },
  "cpbattlegameapiSchemaF7683E37": {
   "Type": "AWS::AppSync::GraphQLSchema",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "Definition": "scalar AWSJSON\nscalar AWSDateTime\n\nunion Card = PersonCard | StarshipCard\n\ntype PersonCard {\n  id: ID!\n  name: String!\n  mass: Int!\n  height: Int!\n  hair_color: String!\n  gender: String!\n  battleAttributeName: String!\n  battleValue: Int!\n  createdAt: AWSDateTime!\n  updatedAt: AWSDateTime!\n}\n\ntype StarshipCard {\n  id: ID!\n  name: String!\n  crew: Int!\n  cargo_capacity: Int!\n  battleAttributeName: String!\n  battleValue: Int!\n  createdAt: AWSDateTime!\n  updatedAt: AWSDateTime!\n}\n\ninput UpsertPersonCard {\n  id: ID\n  name: String!\n  mass: Int!\n  height: Int!\n  hair_color: String!\n  gender: String!\n}\n\ninput UpsertStarshipCard {\n  id: ID\n  name: String!\n  crew: Int!\n  cargo_capacity: Int!\n}\n\ntype BattleResult {\n  cards: [Card!]!\n  winnerId: ID!\n}\n\ntype Query {\n  getCardById(id: ID!): Card!\n  getAllByType(type: String!): [Card!]!\n  getBattleResult(type: String!): BattleResult!\n}\n\ntype Mutation {\n  upsertPersonCard(card: UpsertPersonCard!): PersonCard!\n  upsertStarshipCard(card: UpsertStarshipCard!): StarshipCard!\n  deleteCard(id: ID!): String!\n}\n"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/Schema"
   }
  },
  "cpbattlegameapiDefaultApiKey622A0B4E": {
   "Type": "AWS::AppSync::ApiKey",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    }
   },
   "DependsOn": [
    "cpbattlegameapiSchemaF7683E37"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/DefaultApiKey"
   }
  },
  "cpbattlegameapiGetBattleResultDsServiceRole49B44563": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/GetBattleResultDs/ServiceRole/Resource"
   }
  },
  "cpbattlegameapiGetBattleResultDsServiceRoleDefaultPolicy9B9C99BC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "cardbattle39143529",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "cardbattle39143529",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "cpbattlegameapiGetBattleResultDsServiceRoleDefaultPolicy9B9C99BC",
    "Roles": [
     {
      "Ref": "cpbattlegameapiGetBattleResultDsServiceRole49B44563"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/GetBattleResultDs/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "cpbattlegameapiGetBattleResultDsC25FFEC7": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "cardbattle39143529",
       "Arn"
      ]
     }
    },
    "Name": "GetBattleResultDs",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "cpbattlegameapiGetBattleResultDsServiceRole49B44563",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/GetBattleResultDs/Resource"
   }
  },
  "cpbattlegameapiCardLambdaDsServiceRoleD33E26B1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "appsync.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/CardLambdaDs/ServiceRole/Resource"
   }
  },
  "cpbattlegameapiCardLambdaDsServiceRoleDefaultPolicy977A9041": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "cardsB5484924",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "cardsB5484924",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "cpbattlegameapiCardLambdaDsServiceRoleDefaultPolicy977A9041",
    "Roles": [
     {
      "Ref": "cpbattlegameapiCardLambdaDsServiceRoleD33E26B1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/CardLambdaDs/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "cpbattlegameapiCardLambdaDs704642A6": {
   "Type": "AWS::AppSync::DataSource",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "LambdaConfig": {
     "LambdaFunctionArn": {
      "Fn::GetAtt": [
       "cardsB5484924",
       "Arn"
      ]
     }
    },
    "Name": "CardLambdaDs",
    "ServiceRoleArn": {
     "Fn::GetAtt": [
      "cpbattlegameapiCardLambdaDsServiceRoleD33E26B1",
      "Arn"
     ]
    },
    "Type": "AWS_LAMBDA"
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/CardLambdaDs/Resource"
   }
  },
  "cpbattlegameapigetCardByIdResolverBA66C69C": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "DataSourceName": "CardLambdaDs",
    "FieldName": "getCardById",
    "Kind": "UNIT",
    "TypeName": "Query"
   },
   "DependsOn": [
    "cpbattlegameapiCardLambdaDs704642A6",
    "cpbattlegameapiSchemaF7683E37"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/getCardByIdResolver/Resource"
   }
  },
  "cpbattlegameapigetAllByTypeResolver560D253C": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "DataSourceName": "CardLambdaDs",
    "FieldName": "getAllByType",
    "Kind": "UNIT",
    "TypeName": "Query"
   },
   "DependsOn": [
    "cpbattlegameapiCardLambdaDs704642A6",
    "cpbattlegameapiSchemaF7683E37"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/getAllByTypeResolver/Resource"
   }
  },
  "cpbattlegameapiupsertPersonCardResolver97BB9E99": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "DataSourceName": "CardLambdaDs",
    "FieldName": "upsertPersonCard",
    "Kind": "UNIT",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "cpbattlegameapiCardLambdaDs704642A6",
    "cpbattlegameapiSchemaF7683E37"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/upsertPersonCardResolver/Resource"
   }
  },
  "cpbattlegameapiupsertStarshipCardResolver956D2DEE": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "DataSourceName": "CardLambdaDs",
    "FieldName": "upsertStarshipCard",
    "Kind": "UNIT",
    "TypeName": "Mutation"
   },
   "DependsOn": [
    "cpbattlegameapiCardLambdaDs704642A6",
    "cpbattlegameapiSchemaF7683E37"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/upsertStarshipCardResolver/Resource"
   }
  },
  "cpbattlegameapigetBattleResultResolverFA255519": {
   "Type": "AWS::AppSync::Resolver",
   "Properties": {
    "ApiId": {
     "Fn::GetAtt": [
      "cpbattlegameapiF20B11A1",
      "ApiId"
     ]
    },
    "DataSourceName": "GetBattleResultDs",
    "FieldName": "getBattleResult",
    "Kind": "UNIT",
    "TypeName": "Query"
   },
   "DependsOn": [
    "cpbattlegameapiGetBattleResultDsC25FFEC7",
    "cpbattlegameapiSchemaF7683E37"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/cpbattlegame-api/getBattleResultResolver/Resource"
   }
  },
  "CardsB3AD5C31": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     },
     {
      "AttributeName": "type",
      "AttributeType": "S"
     }
    ],
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "TypeIndex",
      "KeySchema": [
       {
        "AttributeName": "type",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      },
      "ProvisionedThroughput": {
       "ReadCapacityUnits": 5,
       "WriteCapacityUnits": 5
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "TableName": "cards"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiStack/Cards/Resource"
   }
  },
  "cardbattleServiceRoleE32FA135": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/card-battle/ServiceRole/Resource"
   }
  },
  "cardbattleServiceRoleDefaultPolicy6BA5C8E5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CardsB3AD5C31",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CardsB3AD5C31",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "cardbattleServiceRoleDefaultPolicy6BA5C8E5",
    "Roles": [
     {
      "Ref": "cardbattleServiceRoleE32FA135"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/card-battle/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "cardbattle39143529": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faef387bed0d83bf93a63b557b74bc5629b574ab5caaea26bc04e4dbab132f17.zip"
    },
    "Environment": {
     "Variables": {
      "CARDS_TABLE_NAME": {
       "Ref": "CardsB3AD5C31"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "cardbattleServiceRoleE32FA135",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "cardbattleServiceRoleDefaultPolicy6BA5C8E5",
    "cardbattleServiceRoleE32FA135"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/card-battle/Resource",
    "aws:asset:path": "asset.faef387bed0d83bf93a63b557b74bc5629b574ab5caaea26bc04e4dbab132f17",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "cardbattleLogGroup81EBF9C5": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "cardbattle39143529"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiStack/card-battle/LogGroup/Resource"
   }
  },
  "cardsServiceRoleFA4C678C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cards/ServiceRole/Resource"
   }
  },
  "cardsServiceRoleDefaultPolicy7AD170DE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CardsB3AD5C31",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CardsB3AD5C31",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "cardsServiceRoleDefaultPolicy7AD170DE",
    "Roles": [
     {
      "Ref": "cardsServiceRoleFA4C678C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/cards/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "cardsB5484924": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "538c1bd327159a8d164650b529e1b7d11ba60bbb4c64505c9e996f268d8bc621.zip"
    },
    "Environment": {
     "Variables": {
      "CARDS_TABLE_NAME": {
       "Ref": "CardsB3AD5C31"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "cardsServiceRoleFA4C678C",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x"
   },
   "DependsOn": [
    "cardsServiceRoleDefaultPolicy7AD170DE",
    "cardsServiceRoleFA4C678C"
   ],
   "Metadata": {
    "aws:cdk:path": "ApiStack/cards/Resource",
    "aws:asset:path": "asset.538c1bd327159a8d164650b529e1b7d11ba60bbb4c64505c9e996f268d8bc621",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "cardsLogGroup6A34F7AD": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "cardsB5484924"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ApiStack/cards/LogGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1WS2/bMAz+LdOxUL0uxS65uY8VRYOuq3MZjCBgJCZRKkuaJLf1BP/3QfKj6YoN3S4Dih0MUh8f5kdZlCfZ5OhjdvQOHtwh43eHUqyyUHhgdxQe3DKAMa5RLAsXFsz2m8yNKANRUCGZkgNCCdR+q634Dl5odarVWmzINBCOa6ilz/etEX/mPm9MTJPfXC6vzr+StqXk0UJzrmAlkZOptzXSmEoo0SUgB6SlgQDnBdtiBWdoUHFUrCHTkhyQxT+zLujpWqUmfZnlRuytuogI5EZcYUNnUK04nIGHQteWYTTtrW7RaXmPNsKD3lIBVRZutcQyEHCurpCfNLGjxgrFhAGZM6Zr5Yd9ST4xIGdPvetJzPXNEHWjpUgsQttR9B7Y9lJJoXC0jfx/a3xjVVFSgYIN8pRToIvlPMOa3Pa+i/8Ufm1MRyOWRjs8omPAXEfLizwvYc4LDx4rVN4NJb3dRKlnXbtayhsFlearLMzjZCwD8VFeP01hA9anEXmF6SvZG9C+G7LFeMwupF6BLJBpxcE2l4rjY/ouRNT+NCklxuodsv15PpuRgUIquKUyjbyl0hx3LrtO4lOtUlQZiK2VF2PyLSgu0fYrVN42vc40x/ESeF1QS8Prnf/6DQvqjpfgHHqX5VFQd5yd1OwO/Qk4LBd9B7LTtRp4U6k3LgszvbmwujZlILJXxz2IRbwEU2OHsLZNF0a8OdK5+ulZ0FRO4WEj1CYGfq69qX1L415kO/f+fjLJPsRfgJ0T4rCnnN128gfcK40qHwgAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ApiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "GraphQLAPIURL": {
   "Value": {
    "Fn::GetAtt": [
     "cpbattlegameapiF20B11A1",
     "GraphQLUrl"
    ]
   }
  },
  "GraphQLAPIKey": {
   "Value": {
    "Fn::GetAtt": [
     "cpbattlegameapiDefaultApiKey622A0B4E",
     "ApiKey"
    ]
   }
  },
  "StackRegion": {
   "Value": {
    "Ref": "AWS::Region"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}